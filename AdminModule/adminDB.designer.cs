#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdminModule
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FASTERP")]
	public partial class adminDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBatch(Batch instance);
    partial void UpdateBatch(Batch instance);
    partial void DeleteBatch(Batch instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertProgramme(Programme instance);
    partial void UpdateProgramme(Programme instance);
    partial void DeleteProgramme(Programme instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertDesignation(Designation instance);
    partial void UpdateDesignation(Designation instance);
    partial void DeleteDesignation(Designation instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    #endregion
		
		public adminDBDataContext() : 
				base(global::AdminModule.Properties.Settings.Default.FASTERPConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public adminDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public adminDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public adminDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public adminDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Batch> Batches
		{
			get
			{
				return this.GetTable<Batch>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Programme> Programmes
		{
			get
			{
				return this.GetTable<Programme>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<Designation> Designations
		{
			get
			{
				return this.GetTable<Designation>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.emp_getEmployeeLogin")]
		public ISingleResult<emp_getEmployeeLoginResult> emp_getEmployeeLogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, password);
			return ((ISingleResult<emp_getEmployeeLoginResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.co_searchCourse")]
		public ISingleResult<co_searchCourseResult> co_searchCourse([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string data)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), data);
			return ((ISingleResult<co_searchCourseResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.emp_searchEmployee")]
		public ISingleResult<emp_searchEmployeeResult> emp_searchEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string data)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), data);
			return ((ISingleResult<emp_searchEmployeeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.st_searchStudent")]
		public ISingleResult<st_searchStudentResult> st_searchStudent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string data)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), data);
			return ((ISingleResult<st_searchStudentResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Batch")]
	public partial class Batch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BatchID;
		
		private string _BatchName;
		
		private int _BatchYear;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBatchIDChanging(int value);
    partial void OnBatchIDChanged();
    partial void OnBatchNameChanging(string value);
    partial void OnBatchNameChanged();
    partial void OnBatchYearChanging(int value);
    partial void OnBatchYearChanged();
    #endregion
		
		public Batch()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BatchName
		{
			get
			{
				return this._BatchName;
			}
			set
			{
				if ((this._BatchName != value))
				{
					this.OnBatchNameChanging(value);
					this.SendPropertyChanging();
					this._BatchName = value;
					this.SendPropertyChanged("BatchName");
					this.OnBatchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchYear", DbType="Int NOT NULL")]
		public int BatchYear
		{
			get
			{
				return this._BatchYear;
			}
			set
			{
				if ((this._BatchYear != value))
				{
					this.OnBatchYearChanging(value);
					this.SendPropertyChanging();
					this._BatchYear = value;
					this.SendPropertyChanged("BatchYear");
					this.OnBatchYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Batch_Student", Storage="_Students", ThisKey="BatchID", OtherKey="BatchID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Batch = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Batch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentID;
		
		private string _SName;
		
		private string _Email;
		
		private string _MobileNumber;
		
		private string _RollNumber;
		
		private int _CandidateID;
		
		private int _BatchID;
		
		private string _SPassword;
		
		private System.Nullable<int> _ProgrammeID;
		
		private EntityRef<Batch> _Batch;
		
		private EntityRef<Programme> _Programme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnSNameChanging(string value);
    partial void OnSNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnRollNumberChanging(string value);
    partial void OnRollNumberChanged();
    partial void OnCandidateIDChanging(int value);
    partial void OnCandidateIDChanged();
    partial void OnBatchIDChanging(int value);
    partial void OnBatchIDChanged();
    partial void OnSPasswordChanging(string value);
    partial void OnSPasswordChanged();
    partial void OnProgrammeIDChanging(System.Nullable<int> value);
    partial void OnProgrammeIDChanged();
    #endregion
		
		public Student()
		{
			this._Batch = default(EntityRef<Batch>);
			this._Programme = default(EntityRef<Programme>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SName
		{
			get
			{
				return this._SName;
			}
			set
			{
				if ((this._SName != value))
				{
					this.OnSNameChanging(value);
					this.SendPropertyChanging();
					this._SName = value;
					this.SendPropertyChanged("SName");
					this.OnSNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RollNumber", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string RollNumber
		{
			get
			{
				return this._RollNumber;
			}
			set
			{
				if ((this._RollNumber != value))
				{
					this.OnRollNumberChanging(value);
					this.SendPropertyChanging();
					this._RollNumber = value;
					this.SendPropertyChanged("RollNumber");
					this.OnRollNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateID", DbType="Int NOT NULL")]
		public int CandidateID
		{
			get
			{
				return this._CandidateID;
			}
			set
			{
				if ((this._CandidateID != value))
				{
					this.OnCandidateIDChanging(value);
					this.SendPropertyChanging();
					this._CandidateID = value;
					this.SendPropertyChanged("CandidateID");
					this.OnCandidateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchID", DbType="Int NOT NULL")]
		public int BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					if (this._Batch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPassword", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string SPassword
		{
			get
			{
				return this._SPassword;
			}
			set
			{
				if ((this._SPassword != value))
				{
					this.OnSPasswordChanging(value);
					this.SendPropertyChanging();
					this._SPassword = value;
					this.SendPropertyChanged("SPassword");
					this.OnSPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgrammeID", DbType="Int")]
		public System.Nullable<int> ProgrammeID
		{
			get
			{
				return this._ProgrammeID;
			}
			set
			{
				if ((this._ProgrammeID != value))
				{
					if (this._Programme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgrammeIDChanging(value);
					this.SendPropertyChanging();
					this._ProgrammeID = value;
					this.SendPropertyChanged("ProgrammeID");
					this.OnProgrammeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Batch_Student", Storage="_Batch", ThisKey="BatchID", OtherKey="BatchID", IsForeignKey=true)]
		public Batch Batch
		{
			get
			{
				return this._Batch.Entity;
			}
			set
			{
				Batch previousValue = this._Batch.Entity;
				if (((previousValue != value) 
							|| (this._Batch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Batch.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Batch.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._BatchID = value.BatchID;
					}
					else
					{
						this._BatchID = default(int);
					}
					this.SendPropertyChanged("Batch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Programme_Student", Storage="_Programme", ThisKey="ProgrammeID", OtherKey="ProgrammeID", IsForeignKey=true)]
		public Programme Programme
		{
			get
			{
				return this._Programme.Entity;
			}
			set
			{
				Programme previousValue = this._Programme.Entity;
				if (((previousValue != value) 
							|| (this._Programme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Programme.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Programme.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._ProgrammeID = value.ProgrammeID;
					}
					else
					{
						this._ProgrammeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Programme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Programme")]
	public partial class Programme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgrammeID;
		
		private string _ProgrammeName;
		
		private int _DepartmentID;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgrammeIDChanging(int value);
    partial void OnProgrammeIDChanged();
    partial void OnProgrammeNameChanging(string value);
    partial void OnProgrammeNameChanged();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    #endregion
		
		public Programme()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgrammeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProgrammeID
		{
			get
			{
				return this._ProgrammeID;
			}
			set
			{
				if ((this._ProgrammeID != value))
				{
					this.OnProgrammeIDChanging(value);
					this.SendPropertyChanging();
					this._ProgrammeID = value;
					this.SendPropertyChanged("ProgrammeID");
					this.OnProgrammeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgrammeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProgrammeName
		{
			get
			{
				return this._ProgrammeName;
			}
			set
			{
				if ((this._ProgrammeName != value))
				{
					this.OnProgrammeNameChanging(value);
					this.SendPropertyChanging();
					this._ProgrammeName = value;
					this.SendPropertyChanged("ProgrammeName");
					this.OnProgrammeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Programme_Student", Storage="_Students", ThisKey="ProgrammeID", OtherKey="ProgrammeID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Programme = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Programme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CourseID;
		
		private string _CourseName;
		
		private string _CourseCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnCourseCodeChanging(string value);
    partial void OnCourseCodeChanged();
    #endregion
		
		public Course()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CourseCode
		{
			get
			{
				return this._CourseCode;
			}
			set
			{
				if ((this._CourseCode != value))
				{
					this.OnCourseCodeChanging(value);
					this.SendPropertyChanging();
					this._CourseCode = value;
					this.SendPropertyChanged("CourseCode");
					this.OnCourseCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Designation")]
	public partial class Designation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesignationID;
		
		private string _DesignationTitle;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesignationIDChanging(int value);
    partial void OnDesignationIDChanged();
    partial void OnDesignationTitleChanging(string value);
    partial void OnDesignationTitleChanged();
    #endregion
		
		public Designation()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DesignationID
		{
			get
			{
				return this._DesignationID;
			}
			set
			{
				if ((this._DesignationID != value))
				{
					this.OnDesignationIDChanging(value);
					this.SendPropertyChanging();
					this._DesignationID = value;
					this.SendPropertyChanged("DesignationID");
					this.OnDesignationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationTitle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DesignationTitle
		{
			get
			{
				return this._DesignationTitle;
			}
			set
			{
				if ((this._DesignationTitle != value))
				{
					this.OnDesignationTitleChanging(value);
					this.SendPropertyChanging();
					this._DesignationTitle = value;
					this.SendPropertyChanged("DesignationTitle");
					this.OnDesignationTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Designation_Employee", Storage="_Employees", ThisKey="DesignationID", OtherKey="DesignationID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Designation = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Designation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepartmentID;
		
		private string _DepartmentName;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    #endregion
		
		public Department()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employees", ThisKey="DepartmentID", OtherKey="DepartmentID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmpID;
		
		private string _EmpName;
		
		private string _Email;
		
		private string _MobileNumber;
		
		private int _DesignationID;
		
		private int _DepartmentID;
		
		private int _RefID;
		
		private string _EPassword;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Designation> _Designation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(int value);
    partial void OnEmpIDChanged();
    partial void OnEmpNameChanging(string value);
    partial void OnEmpNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnDesignationIDChanging(int value);
    partial void OnDesignationIDChanged();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnRefIDChanging(int value);
    partial void OnRefIDChanged();
    partial void OnEPasswordChanging(string value);
    partial void OnEPasswordChanged();
    #endregion
		
		public Employee()
		{
			this._Department = default(EntityRef<Department>);
			this._Designation = default(EntityRef<Designation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpName
		{
			get
			{
				return this._EmpName;
			}
			set
			{
				if ((this._EmpName != value))
				{
					this.OnEmpNameChanging(value);
					this.SendPropertyChanging();
					this._EmpName = value;
					this.SendPropertyChanged("EmpName");
					this.OnEmpNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationID", DbType="Int NOT NULL")]
		public int DesignationID
		{
			get
			{
				return this._DesignationID;
			}
			set
			{
				if ((this._DesignationID != value))
				{
					if (this._Designation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesignationIDChanging(value);
					this.SendPropertyChanging();
					this._DesignationID = value;
					this.SendPropertyChanged("DesignationID");
					this.OnDesignationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefID", DbType="Int NOT NULL")]
		public int RefID
		{
			get
			{
				return this._RefID;
			}
			set
			{
				if ((this._RefID != value))
				{
					this.OnRefIDChanging(value);
					this.SendPropertyChanging();
					this._RefID = value;
					this.SendPropertyChanged("RefID");
					this.OnRefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EPassword
		{
			get
			{
				return this._EPassword;
			}
			set
			{
				if ((this._EPassword != value))
				{
					this.OnEPasswordChanging(value);
					this.SendPropertyChanging();
					this._EPassword = value;
					this.SendPropertyChanged("EPassword");
					this.OnEPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._DepartmentID = value.DepartmentID;
					}
					else
					{
						this._DepartmentID = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Designation_Employee", Storage="_Designation", ThisKey="DesignationID", OtherKey="DesignationID", IsForeignKey=true)]
		public Designation Designation
		{
			get
			{
				return this._Designation.Entity;
			}
			set
			{
				Designation previousValue = this._Designation.Entity;
				if (((previousValue != value) 
							|| (this._Designation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Designation.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Designation.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._DesignationID = value.DesignationID;
					}
					else
					{
						this._DesignationID = default(int);
					}
					this.SendPropertyChanged("Designation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class emp_getEmployeeLoginResult
	{
		
		private int _EmpID;
		
		private string _EmpName;
		
		private string _EmpEmail;
		
		private string _EmpMobileNumber;
		
		private string _EmpPassword;
		
		private string _EmpDesignation;
		
		public emp_getEmployeeLoginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="Int NOT NULL")]
		public int EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this._EmpID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpName
		{
			get
			{
				return this._EmpName;
			}
			set
			{
				if ((this._EmpName != value))
				{
					this._EmpName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpEmail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpEmail
		{
			get
			{
				return this._EmpEmail;
			}
			set
			{
				if ((this._EmpEmail != value))
				{
					this._EmpEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpMobileNumber", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string EmpMobileNumber
		{
			get
			{
				return this._EmpMobileNumber;
			}
			set
			{
				if ((this._EmpMobileNumber != value))
				{
					this._EmpMobileNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpPassword
		{
			get
			{
				return this._EmpPassword;
			}
			set
			{
				if ((this._EmpPassword != value))
				{
					this._EmpPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpDesignation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpDesignation
		{
			get
			{
				return this._EmpDesignation;
			}
			set
			{
				if ((this._EmpDesignation != value))
				{
					this._EmpDesignation = value;
				}
			}
		}
	}
	
	public partial class co_searchCourseResult
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _Code;
		
		public co_searchCourseResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
	}
	
	public partial class emp_searchEmployeeResult
	{
		
		private int _EmpID;
		
		private string _EmpName;
		
		private string _EmpEmail;
		
		private string _EmpMobileNumber;
		
		private string _EmpPassword;
		
		private string _EmpDesignation;
		
		private string _DepartmentName;
		
		public emp_searchEmployeeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="Int NOT NULL")]
		public int EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this._EmpID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpName
		{
			get
			{
				return this._EmpName;
			}
			set
			{
				if ((this._EmpName != value))
				{
					this._EmpName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpEmail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpEmail
		{
			get
			{
				return this._EmpEmail;
			}
			set
			{
				if ((this._EmpEmail != value))
				{
					this._EmpEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpMobileNumber", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string EmpMobileNumber
		{
			get
			{
				return this._EmpMobileNumber;
			}
			set
			{
				if ((this._EmpMobileNumber != value))
				{
					this._EmpMobileNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpPassword
		{
			get
			{
				return this._EmpPassword;
			}
			set
			{
				if ((this._EmpPassword != value))
				{
					this._EmpPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpDesignation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpDesignation
		{
			get
			{
				return this._EmpDesignation;
			}
			set
			{
				if ((this._EmpDesignation != value))
				{
					this._EmpDesignation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
	}
	
	public partial class st_searchStudentResult
	{
		
		private int _ID;
		
		private string _Sname;
		
		private string _Semail;
		
		private string _Spass;
		
		private string _SMN;
		
		private string _SrollNum;
		
		private int _BatchID;
		
		private int _BatchYrs;
		
		private int _ProgrammeID;
		
		private string _progName;
		
		public st_searchStudentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Sname
		{
			get
			{
				return this._Sname;
			}
			set
			{
				if ((this._Sname != value))
				{
					this._Sname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Semail
		{
			get
			{
				return this._Semail;
			}
			set
			{
				if ((this._Semail != value))
				{
					this._Semail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spass", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Spass
		{
			get
			{
				return this._Spass;
			}
			set
			{
				if ((this._Spass != value))
				{
					this._Spass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMN", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string SMN
		{
			get
			{
				return this._SMN;
			}
			set
			{
				if ((this._SMN != value))
				{
					this._SMN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrollNum", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string SrollNum
		{
			get
			{
				return this._SrollNum;
			}
			set
			{
				if ((this._SrollNum != value))
				{
					this._SrollNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchID", DbType="Int NOT NULL")]
		public int BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this._BatchID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchYrs", DbType="Int NOT NULL")]
		public int BatchYrs
		{
			get
			{
				return this._BatchYrs;
			}
			set
			{
				if ((this._BatchYrs != value))
				{
					this._BatchYrs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgrammeID", DbType="Int NOT NULL")]
		public int ProgrammeID
		{
			get
			{
				return this._ProgrammeID;
			}
			set
			{
				if ((this._ProgrammeID != value))
				{
					this._ProgrammeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_progName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string progName
		{
			get
			{
				return this._progName;
			}
			set
			{
				if ((this._progName != value))
				{
					this._progName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
